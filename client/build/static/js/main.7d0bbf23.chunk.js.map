{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","actions/cartActions.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/ConfirmDialog.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","addToCart","qty","option","JSObject","choicesObj","price_list","Object","values","thePrice","countInStock","setItem","stringify","ProductScreen","setQty","setRating","comment","setComment","cartLimit","equals0","setEquals0","setOption","successProductReview","loadingProductReview","errorProductReview","choiceJson","setChoiceJson","options","url_id","window","pathname","split","then","res","length","choice_list","i","label","tempPrice","setTempPrice","ListGroup","fontWeight","undefined","price_index","y","compareObject","pre_tempPrice","console","log","disabled","review","createdAt","substring","productId","post","Group","controlId","Label","row","CartScreen","pre_qty","search","Number","optionURL","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","setAcc","phone","setPhone","required","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","num","itemsPrice","Math","round","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","paypal","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","reverse","category","brand","ProductEditScreen","setChoicesObj","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","choice","inputList","setInputList","uploadFileHandler","file","files","formData","FormData","append","handleInputChange","list","handleAddClick","updateProduct","File","custom","splice","handleRemoveClick","makeStyles","theme","root","maxWidth","backgroundColor","paper","maxHeight","OrderListScreen","At","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7d0bbf23.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,  \n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='搜尋貨品'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        搜尋\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>矮仔工作室</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> 購物車\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    登出\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> 登入\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; 矮仔工作室</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To 矮仔工作室',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>最新產品</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = ( id, qty, option ) => async ( dispatch, getState ) => {\n\n  \n\n  const { data } = await axios.get( `/api/products/${ id }` )\n  const JSObject = JSON.parse(data.choicesObj)\n  const price_list = JSObject.map( item => Object.values( item )[ 1 ] )\n  const thePrice = price_list[option]\n  \n  dispatch( {\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: thePrice,\n      countInStock: data.countInStock,\n      qty,\n     \n    },\n  } )\n\n  localStorage.setItem( 'cartItems', JSON.stringify( getState().cart.cartItems ) )\n}\nexport const addToPrice = ( id, price ) => async ( dispatch, getState ) => {\n  const { data } = await axios.get( `/api/products/${ id }` )\n\n  dispatch( {\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price,\n      countInStock: data.countInStock,\n      qty: data.qty,\n    },\n  } )\n\n  localStorage.setItem( 'cartItems', JSON.stringify( getState().cart.cartItems ) )\n}\n\nexport const removeFromCart = ( id ) => ( dispatch, getState ) => {\n  dispatch( {\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  } )\n\n  localStorage.setItem( 'cartItems', JSON.stringify( getState().cart.cartItems ) )\n}\n\nexport const saveShippingAddress = ( data ) => ( dispatch ) => {\n  dispatch( {\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  } )\n\n  localStorage.setItem( 'shippingAddress', JSON.stringify( data ) )\n}\n\nexport const savePaymentMethod = ( data ) => ( dispatch ) => {\n  dispatch( {\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  } )\n\n  localStorage.setItem( 'paymentMethod', JSON.stringify( data ) )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport Select from 'react-select'\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\n\nimport { addToCart, addToPrice } from '../actions/cartActions'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport axios from 'axios'\nimport { bold } from 'colors'\n\nconst ProductScreen = ( { history, match } ) => {\n  const [ qty, setQty ] = useState( 1 )\n  const [ rating, setRating ] = useState( 0 )\n  const [ comment, setComment ] = useState( '' )\n  const [ cartLimit, setCartLimit ] = useState( '' )\n\n\n  const dispatch = useDispatch()\n  const [ equals0, setEquals0, ] = useState( \"\" )\n  const productDetails = useSelector( ( state ) => state.productDetails )\n  const { loading, error, product } = productDetails\n  const [ option, setOption ] = useState( 0 );\n  const userLogin = useSelector( ( state ) => state.userLogin )\n  const { userInfo } = userLogin\n  const [ orderPrice, setOrderPrice ] = useState( 0 )\n  const productReviewCreate = useSelector( ( state ) => state.productReviewCreate )\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n  const [ choiceJson, setChoiceJson ] = useState( [] )\n  const options = [\n\n  ]\n\n  //\n  const compareObject = ( x, y ) => {\n    for ( let i = 0; i < x.length; i++ ) {\n      if ( x[ i ].value === y.value ) {\n        return i\n      }\n    }\n  }\n  const url_id = window.location.pathname.split( 'product/' )[ 1 ]\n\n  axios.get( `/api/products/${ url_id }` ).then( res => {\n    setChoiceJson( JSON.parse( res.data.choicesObj ) )\n  } )\n  const cart = useSelector( ( state ) => state.cart )\n  const { cartItems } = cart\n  const isMoreThanOne = cartItems.length >= 1\n\n\n  const choice_list = choiceJson.map( item => Object.values( item )[ 0 ] )\n  for ( let i = 0; i < choice_list.length; i++ ) {\n\n    options.push( { value: choice_list[ i ], label: choice_list[ i ] } )\n    //console.log(choice_list[i])\n  }\n  //price_list\n  const price_list = choiceJson.map( item => Object.values( item )[ 1 ] )\n  //console.log(price_list)\n  const [ tempPrice, setTempPrice ] = useState( 0 )\n  // .then((res) => { res.data } )\n\n  //const choice_list = product.choicesObj\n  const handleChange = ( option ) => {\n    if ( option !== undefined ) {\n\n\n      const price_index = compareObject( options, option )\n\n      // ***\n      setOption( price_index );\n      const pre_tempPrice = price_list[ price_index ]\n      setTempPrice( pre_tempPrice )\n      // const compareIndex = options.findIndex(tempPrice.price)\n    }\n\n\n\n  }\n  useEffect( () => {\n\n    if ( successProductReview ) {\n      setRating( 0 )\n      setComment( '' )\n    }\n\n\n    if ( !product._id || product._id !== match.params.id ) {\n      dispatch( listProductDetails( match.params.id ) )\n      dispatch( { type: PRODUCT_CREATE_REVIEW_RESET } )\n    }\n  }, [ dispatch, match, successProductReview ] )\n\n  const addToCartHandler = () => {\n    if ( tempPrice === 0 ) {\n      setEquals0( \"請先選擇選項，再加入購物車\" );\n\n    }\n    // else if(isMoreThanOne){\n    //   setCartLimit(\"每次限買一項產品，如果想結賬或刪除，請至購物車\")\n    // }\n    else {\n\n      console.log( tempPrice )\n      history.push( `/cart/${ match.params.id }?qty=${ qty }?option=${ option }` )\n      //setTempPrice( tempPrice )\n    }\n  }\n  const submitHandler = ( e ) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview( match.params.id, {\n        rating,\n        comment,\n      } )\n    )\n  }\n\n\n\n\n\n\n  //const result = Object.assign([1], JSON.parse(product_choice));\n\n\n  return (\n    <>\n\n      <Link className='btn btn-light my-3' to='/'>\n        返回\n      </Link>\n      { loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{ error }</Message>\n      ) : (\n        <>\n          <Meta title={ product.name } />\n          <Row>\n            <Col md={ 6 }>\n              <Image src={ product.image } alt={ product.name } fluid />\n            </Col>\n            <Col md={ 3 }>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{ product.name }</h3>\n\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={ product.rating }\n                    text={ `${ product.numReviews } 評價` }\n                  />\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${ tempPrice }</ListGroup.Item>\n                <ListGroup.Item>\n                  簡介: { product.description }\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={ 3 }>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <strong id=\"equals0\" style={ { color: 'red', fontWeight: 'bold' } } >{ equals0 }</strong>\n                      <strong id=\"moreThanOne\" style={ { color: 'red', fontWeight: 'bold' } } >{ cartLimit }</strong>\n\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>價錢:</Col>\n                      <Col>\n                        <strong>${ tempPrice }</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>銷售狀態:</Col>\n                      <Col>\n                        { product.countInStock > 0 ? '有貨' : '售罄' }\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  { product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>數量</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={ qty }\n                            onChange={ ( e ) => setQty( e.target.value ) }\n                          >\n                            { [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ].map(\n                              ( x ) => (\n                                <option key={ x + 1 } value={ x + 1 }>\n                                  { x + 1 }\n                                </option>\n                              )\n                            ) }\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ) }\n\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>選項</Col>\n                      <Col>\n                        <Dropdown options={ options } onChange={ handleChange } value={ tempPrice } placeholder=\"請選擇\" />;\n\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={ addToCartHandler }\n                      className='btn-block'\n                      type='button'\n                      disabled={ product.countInStock === 0 }\n                    >\n                      新增至購物車\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={ 6 }>\n              <h2>評價</h2>\n              { product.reviews.length === 0 && <Message>No Reviews</Message> }\n              <ListGroup variant='flush'>\n                { product.reviews.map( ( review ) => (\n                  <ListGroup.Item key={ review._id }>\n                    <strong>{ review.name }</strong>\n                    <Rating value={ review.rating } />\n                    <p>{ review.createdAt.substring( 0, 10 ) }</p>\n                    <p>{ review.comment }</p>\n                  </ListGroup.Item>\n                ) ) }\n                <ListGroup.Item>\n                  <h2>撰寫評論</h2>\n                  { successProductReview && (\n                    <Message variant='success'>\n                     成功上傳\n                    </Message>\n                  ) }\n                  { loadingProductReview && <Loader /> }\n                  { errorProductReview && (\n                    <Message variant='danger'>{ errorProductReview }</Message>\n                  ) }\n                  { userInfo ? (\n                    <Form onSubmit={ submitHandler }>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={ rating }\n                          onChange={ ( e ) => setRating( e.target.value ) }\n                        >\n                          <option value=''>選擇</option>\n                          <option value='1'>1 - 十分差勁</option>\n                          <option value='2'>2 - 差勁</option>\n                          <option value='3'>3 - 中等</option>\n                          <option value='4'>4 - 優質</option>\n                          <option value='5'>5 - 十分優質</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={ comment }\n                          onChange={ ( e ) => setComment( e.target.value ) }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={ loadingProductReview }\n                        type='submit'\n                        variant='primary'\n                      >\n                        提交\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>請登入</Link> 再撰寫評論{ ' ' }\n                    </Message>\n                  ) }\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      ) }\n\n    </>\n\n  )\n}\n\nexport default ProductScreen\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart, } from '../actions/cartActions'\n\nimport axios from 'axios';\nimport { saveShippingAddress } from '../actions/cartActions'\nconst CartScreen = ( { match, location, history } ) => {\n  const pre_url_id = window.location.pathname.split( 'cart/' )[ 1 ]\n  const url_id = /*pre_url_id.split( \"?\" )[ 0 ]*/ match.params.id\n  const [ choiceJson, setChoiceJson ] = useState( [] )\n  const productId = match.params.id\n  const pre_qty = location.search.split( '=' )[ 1 ]\n  const qty = location.search ? Number( pre_qty.split( \"?\" )[ 0 ] ) : 1\n  const optionURL = location.search.split( '=' )[ 2 ]\n  const dispatch = useDispatch()\n\n  const cart = useSelector( ( state ) => state.cart )\n  const { cartItems } = cart\n  const { shippingAddress } = cart\n  const [ option, setOption ] = useState( shippingAddress.option )\n\n  useEffect( () => {\n    if ( productId ) {\n\n      console.log( optionURL )\n      dispatch( addToCart( productId, qty, optionURL ) )\n    }\n  }, [ dispatch, productId, qty, optionURL ] )\n\n  const removeFromCartHandler = ( id ) => {\n    dispatch( removeFromCart( id ) )\n  }\n  const checkoutHandler = () => {\n\n    history.push( `/login?redirect=shipping` )\n  }\n  axios.get( `/api/products/${ url_id }` ).then( res => {\n    setChoiceJson( JSON.parse( res.data.choicesObj ) )\n  } )\n  const price_list = choiceJson.map( item => Object.values( item )[ 1 ] )\n  const thePrice = price_list[ optionURL ]\n\n\n\n  return (\n    <Row>\n      <Col md={ 8 }>\n        <h1>購物車</h1>\n        { cartItems.length === 0 ? (\n          <Message>\n            你的購物車目前是空的 <Link to='/'>按此返回</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            { cartItems.map( ( item ) => (\n              <ListGroup.Item key={ item.product }>\n                <Row>\n                  <Col md={ 2 }>\n                    <Image src={ item.image } alt={ item.name } fluid rounded />\n                  </Col>\n                  <Col md={ 3 }>\n                    <Link to={ `/product/${ item.product }` }>{ item.name }</Link>\n                  </Col>\n                  <Col md={ 2 }>${ item.price }</Col>\n                  <Col md={ 2 }>\n                    <Form.Control\n                      as='select'\n                      value={ item.qty }\n                      onChange={ ( e ) =>\n                        dispatch(\n                          addToCart( item.product, Number( e.target.value ) )\n                        )\n                      }\n                    >\n                      { [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ].map( ( x ) => (\n                        <option key={ x + 1 } value={ x + 1 }>\n                          { x + 1 }\n                        </option>\n                      ) ) }\n                    </Form.Control>\n                  </Col>\n                  <Col md={ 2 }>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={ () => removeFromCartHandler( item.product ) }\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ) ) }\n          </ListGroup>\n        ) }\n      </Col>\n      <Col md={ 4 }>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                小計 ({ cartItems.reduce( ( acc, item ) => acc + item.qty, 0 ) })\n                個貨品\n              </h2>\n              $\n              { cartItems\n                .reduce( ( acc, item ) => acc + item.qty * item.price, 0 )\n                .toFixed( 2 ) }\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={ cartItems.length === 0 }\n                onClick={ checkoutHandler }\n              >\n                進行結賬\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n  const [acc,setAcc] = useState(shippingAddress.acc)\n  const [phone,setPhone] = useState(shippingAddress.phone)\n  const dispatch = useDispatch()\n  \n  const submitHandler = (e) => {\n\n\n    e.preventDefault()\n    dispatch(saveShippingAddress({address, city, postalCode, country,acc,phone }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping（不適用的填0則可）</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>地址</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='輸入地址'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>城市</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='輸入城市'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Form.Group controlId='acc'>\n          <Form.Label>賬號資料/附加資訊</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='請輸入基本的賬號登入資料，例如密碼以及賬號名稱、電郵等等'\n            value={acc}\n            required\n            onChange={(e) => setAcc(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='phone'>\n          <Form.Label>電話號碼</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='例如：+852 55558888'\n            value={phone}\n            required\n            onChange={(e) => setPhone(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>郵遞編號</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='輸入郵遞編號'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>國家</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='輸入國家'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          繼續\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('AlipayHK')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>付款方式</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>選擇付款方式</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='AlipayHK(支付寶HK)'\n              id='AlipayHK'\n              name='paymentMethod'\n              value='AlipayHK'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n           \n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          繼續\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect,useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\nimport \"./payment.css\"\nimport axios from 'axios'\nconst PlaceOrderScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const dispatch = useDispatch()\n  const [ choiceJson, setChoiceJson ] = useState( [] )\n  axios.get( `/api/products/${ cart.item }` ).then( res => {\n    setChoiceJson( JSON.parse( res.data.choicesObj ) )\n  } )\n  // const price_list = choiceJson.map( item => Object.values( item )[ 1 ] )\n  // const thePrice = cartItems\n  console.log(cart)\n  \n \n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = /*addDecimals(cart.itemsPrice > 100 ? 0 : 100)*/ 0\n  cart.taxPrice = /*addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))*/ 0\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n \n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`) \n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              \n\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country},{''}\n            <br/>\n                <strong id=\"phone-text\">Phone Numbers:</strong>\n                {cart.shippingAddress.phone},{''}\n                <br/>\n                <strong id=\"acc-text\">Account Details:</strong>\n                <br/>\n                {cart.shippingAddress.acc},{''}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>訂單總結</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>貨品</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>發貨方式</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>稅</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>總計</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  前往付款\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport result from './PaymentResult';\r\n\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n  \r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n \r\n    dispatch(payOrder(orderId, result))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n            <h1 id=\"topic-guide\">已收到你的訂單，請先開支付寶HK掃描QR-Code，我們會在確認你已經付款後立即進行代儲，感謝您的等待</h1>\r\n              <img id=\"qr-code\" src=\"https://cdn.discordapp.com/attachments/699134700547211274/870653607207378984/Screenshot_20210730-210612_AlipayHK.jpg\"></img>\r\n              <h2>Shipping</h2>\r\n              \r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country},{'\\n'}\r\n            <br/>\r\n                <strong id=\"phone-text\">Phone Numbers:</strong>\r\n                {order.shippingAddress.phone},{'\\n'}\r\n                <br/>\r\n                <strong id=\"acc-text\">Account Details:</strong>\r\n                <br/>\r\n                {order.shippingAddress.acc}{'\\n'}\r\n              </p>\r\n              \r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>訂單尚未完成，並將在完成後在此顯示完成，如一段時間沒回應，請刷新本頁或者聯係工作室，謝謝</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              \r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>已購買貨品</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>沒有貨品</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            \r\n      \r\n              <ListGroup.Item>\r\n                <h2>訂單總結</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>貨品</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>發貨方法</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>稅</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>總計</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup variant='flush'>\r\n            {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n          \r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      標示訂單已完成\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              \r\n            </ListGroup>\r\n                 </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n    //\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.reverse().map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n  const [choicesObj,setChoicesObj] = useState()\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n  const [inputList, setInputList] = useState([{ choice: \"\", price: \"\" }]);\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n   \n    if( product.choicesObj) {\n      setInputList(JSON.parse(product.choicesObj))\n    }\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n        setChoicesObj(product.choicesObj)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n\n    // const choice_obj = choicesObj.map(result => result)\n\n   console.log(choicesObj)\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n        choicesObj,\n      })\n    )\n    console.log(choicesObj)\n  }\n\n\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n    setChoicesObj(JSON.stringify(inputList))\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([...inputList, { choice: \"\", price: \"\" }]);\n  };\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n         \n            {inputList.map((x, i) => {\n        return (\n          <div className=\"box\" key=\"\">\n            <input\n              name=\"choice\"\n              placeholder=\"選擇\"\n              value={x.choice}\n              onChange={e => handleInputChange(e, i)}\n            />\n            <input\n              className=\"ml10\"\n              name=\"price\"\n              placeholder=\"價錢\"\n              value={x.price}\n              onChange={e => handleInputChange(e, i)}\n            />\n            <div className=\"btn-box\">\n              {inputList.length !== 1 && <button\n                className=\"mr10\"\n                onClick={() => handleRemoveClick(i)}>Remove</button>}\n              {inputList.length - 1 === i && <button onClick={handleAddClick}>Add</button>}\n            </div>\n          </div>\n        );\n      })}\n       \n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {payOrder} from '../actions/orderActions'\n\n\nimport result from './PaymentResult'\n\n\nconst options = [\n  '取消',\n  '確定將此項目設爲成功'\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n  const timeArray = new Date()\n  const time = timeArray.toLocaleDateString()\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order} = orderCreate\n  const handleOk = () => {\n    \n   \n    if(value === \"確定將此項目設爲成功\"){\n        payOrder('60b77b007eff560d9c375a2b',result(time))\n    }\n    onClose()\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">確定動作/行動</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor:'relative'\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435,\n  },\n}));\n\nexport default function ConfirmDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        \n      <i className=\"fas fa-edit\" onClick={handleClickListItem}></i>\n\n\n        <ListItem button divider disabled role=\"listitem\">\n         \n        </ListItem>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}","import React, { useEffect,setState } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\nimport './Admin.css'\nimport ConfirmDialog from './ConfirmDialog';\n//\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.reverse().map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.At.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                 \n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n\n                  )}\n                  \n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                  <a>\n\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}